---
title: "Introdução ao R Markdown"
# title-slide-attributes:
#     data-background-color: pink
#     data-background-size: contain
#     data-background-opacity: "0.5"

subtitle: "Usando **R** para Relatórios"
author: "Dr. Gerrio Barbosa"
institute: "Núcleo de Estudos Raciais (NERI) - Insper e Pós-Doc FGV-RJ"
logo: logo_gerrio.png
css: css_logo_size.css

footer: "@econodata_r"
incremental: true
execute:
  echo: true
format: 
  revealjs:
    chalkboard: true
    theme: serif
    slide-tone: false
    auto-animate: true
    code-fold: show
    code-summary: ">"
    code-link: true
editor: visual
---

# O que é R Markdown?

## Visão geral do R Markdown

-   É a junção da linguagem `Markdown` com código do `R`

-   Criado e mantido pela [Posit](https://posit.co/products/open-source/rpackages/)

-   Precisa ter instalado [R](https://cran.r-project.org/bin/windows/base/) e [RStudio](https://posit.co/download/rstudio-desktop/) ou o pacote [Pandoc](https://pandoc.org/).

## Vantagens e benefícios

-   Reprodutibilidade é importante para o `R Markdown`.

-   Há outros pacotes desenvolvidos pela comunidade `R` que integram com o `R Markdown` para gerar diversos outros produtos.

-   Podemos usar textos e códigos do `R` na extensão `.Rmd`

-   Possibilita a utilização de códigos `R`, `Python`, `Markdown`, `HTML`, `CSS`, `SQL`, e outros em um único arquivo.

## Criando um Documento {.incremental}

- `File > New File > R Markdown`


:::{.columns}

:::{.column width="50%"}
![](figures/criar_rmq.png){.absolute top=200 bottom=100 left=0 width="400" height="450"}
:::


:::{.column width="50%"}
![](figures/01-tela_rmd.png)
:::

:::


## Estrutura básica de um documento {.smaller}


:::{.columns}

:::{.column width="40%"}
![](figures/02-yaml_chunk_text.png)
:::


:::{.column width="60%"}

 1. **YAML** - Metadados que apresenta códigos YAML para mostrar o resultado final:

    - Título, autoria, data, etc.

 2. **Chunks** - Podemos adicionar códigos em `R` ou em outras linguagens. Devem ser delimitados por três crases e a linguagem especificada entre chaves.

 3. **Markdown** - Textos que podem ser marcados ao longo do relatório.
 
    3.1 No rmarkdown é possível usar `inline code`.
 
 

:::

:::



<!-- ## Renderizando R Markdown -->


## Renderizar o R Markdown

```{r, echo=TRUE, eval=FALSE}

rmarkdown::render('exemplo/index.Rmd')


```

 - Pode escolher a Saída (HTML, PDF, Word, etc.).
 
 - Controle de exibição de resultados definir opcões de chunk. Ver o [Chunk options and package options](https://yihui.org/knitr/options/).
 

## Syntax Markdown {.smaller}


- Linhas com dois espaços para iniciar um parágrafo.

- Texto em *itálico* (`*italico*` ou `_itálico_`)

- Texto em __negrito__ (`**negrito**` ou `__negrito__`)

- Texto ~~riscado~~ (`~~riscado~~`)

- Subscrito^2^ (`subscrito^2^`)

- [link](https://quarto.org/)  `[link](https://quarto.org/)`


## Cabeçalhos {.smaller}


- `# Cabeçalho 1`

- `## Cabeçalho 2`

- `### Cabeçalho 3`

- `#### Cabeçalho 4`

- `##### Cabeçalho 5`

- `###### Cabeçalho 6`




## Inserir Listas e Sublistas

1. Item 1

   - subitem 1
   
      - subitem 2
      
         - subitem 3

2. Item 2

   a. subitem 1

3. Item 3


## Inserindo Fórmulas Matemáticas


![](figures/08-formula_mat.png)


$$f(x) = y = \alpha + \beta X + \epsilon$$



## Inserir Imagens

- Incluindo o código no relatório.

```{r, fig.align='center'}

knitr::include_graphics(path = 'figures/teste_fig.png')

```

## Inserir Gif

```{r, fig.align='center'}

knitr::include_graphics(path = 'figures/luffy_gif_2.gif')

```


## Inserindo Resultados

::: {layout-nrow=2}

![Inserir Código](figures/03-fig_cod_chunk.png)

![Retirar Código](figures/05-retirando_codigo.png)

![Inserir Figuras](figures/04-inserir_fig1.png)

![Não Mostrar Resultado](figures/03-fig_cod_chunck_2_eval.png)
:::


## Inserindo Resultados e Gráficos


![Mostra Somente o Código](figures/06-somente_codigo.png)


## Inserindo Tabelas

![Manualmente](figures/07-criar_tab_1.png)

![Pacote Knitr](figures/07-criar_tab_2.png)



## Outros `pacotes` que podem ser usados para construir tabelas são: 

- `DT`

- `gt`

- `reactable`

- `flextable`

- `kableExtra`




## Personalizando a Aparência do Documento {.smaller}

- Usando `theme` para especificar o tema:

   - default, bootstrap, cerulean, cosmo, darkly, flatly, journal, lumen, paper, readable, sandstone, simplex, spacelab, united e yeti.
   
   - Usar `CSS` para customizar seus próprios temas.
   
- Usando `highlight` o estilo da sintaxe:

   - `default`, `tango`, `pygments`, `kate`, `monochrome`, `espresso`, `zenburn`, `haddock`, `breezedarke` e `textmate`.



## Pacotes com Outros Temas {.smaller}

- Podem ser utilizados temas prontos que deixam os relatórios customizados:

```{r, eval=FALSE, fig.align='center', out.width='100%'}

output:
  prettydoc::html_pretty:
    theme: architect

```

- Outros temas:

   - `cayman:`
   - `tactile:`
   - `leonids:` 
   - `hpstr:`

- [`Themes` do pacote `prettydoc`](https://prettydoc.statr.me/themes.html)



<!-- # Utilizando templates e temas -->

<!-- ## Personalizando estilos e layouts -->

<!-- ## Adicionando elementos visuais (imagens, links, etc.) -->

<!-- ## Trabalhando com Relatórios Dinâmicos -->

<!-- # Utilizando parâmetros e variáveis -->

<!-- ## Criando relatórios interativos -->

<!-- ## Gerando relatórios automatizados -->

# Referências

- [R Markdown: The Definitive Guide](https://bookdown.org/yihui/rmarkdown/)

- [Ciência de Dados com R](http://sillasgonzaga.com/material/cdr/rmarkdown.html)

- [Reference Guide](https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf)

- [Relatórios Curso-R](https://livro.curso-r.com/9-relatorios.html)

- [Slide Beatriz Milz](https://beatrizmilz.github.io/2022-curso-de-verao-ime-usp-relatorios/slides/#37)

